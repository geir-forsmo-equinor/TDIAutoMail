Screen1 As screen:
    Fill: =RGBA(0, 0, 0, 1)

    Label2_1 As label:
        Align: =Align.Center
        Fill: =RGBA(167, 182, 203, 1)
        Height: =666
        Text: =""
        Width: =393
        Y: =102
        ZIndex: =1

    Timer1 As timer:
        AutoStart: =!IsBlank(gbl_stateGUID)
        Duration: =500
        OnTimerEnd: |-
            =Refresh(LogList);
            UpdateContext({loc_currentStatus: LookUp(LogList,GUID=Text(gbl_stateGUID))})
        Repeat: =loc_currentStatus.Status<>3
        Visible: =false
        X: =1041
        Y: =193
        ZIndex: =3

    Gallery1 As gallery.galleryVertical:
        DelayItemLoading: =true
        DisplayMode: =DisplayMode.View
        Height: =221
        Items: |-
            =Table(
                {
                    Id: 1,
                    Value: "validated data",
                    Icon: Icon.Check
                },
                {
                    Id: 2,
                    Value: "approval pending",
                    Icon: Icon.Check
                },
                {
                    Id: 3,
                    Value: "approval granted",
                    Icon: Icon.Check
                }
            )
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        ShowScrollbar: =false
        TemplateSize: =88
        Width: =336
        X: =29
        Y: =170
        ZIndex: =4

        Label1 As label:
            Color: =RGBA(255, 255, 255, 1)
            Height: =23
            OnSelect: =Select(Parent)
            Text: =ThisItem.Value
            Width: =252
            X: =43
            Y: =3
            ZIndex: =1

        Rectangle8 As rectangle:
            Fill: =RGBA(39, 113, 194, 1)
            Height: =67
            OnSelect: =Select(Parent)
            Visible: =If(loc_currentStatus.Status>=ThisItem.Id, true, false)
            Width: =3
            X: =13
            Y: =27
            ZIndex: =2

        Circle2 As circle:
            BorderColor: =RGBA(39, 113, 194, 1)
            BorderThickness: =1
            Fill: =If(loc_currentStatus.Status>=ThisItem.Id, Self.BorderColor, Color.Transparent)
            Height: =30
            OnSelect: =Select(Parent)
            Width: =30
            ZIndex: =3

        Icon2 As icon.Check:
            Color: =RGBA(255, 255, 255, 1)
            Height: =23
            Icon: =Icon.Check
            OnSelect: =Select(Parent)
            Visible: =loc_currentStatus.Status>=ThisItem.Id
            Width: =25
            X: =3
            Y: =3
            ZIndex: =4

    Button2 As button:
        OnSelect: |-
            =UpdateContext(
                {
                    loc_currentStatus: Patch(loc_currentStatus,
                        {
                            Status: 0,
                            Title: "you submitted"
                        }
                    )
                }
            );
             Set(gbl_stateGUID,"");
        Text: ="Reset"
        X: =1201
        Y: =138
        ZIndex: =5

    Label3 As label:
        Color: =RGBA(255, 255, 255, 1)
        Text: |-
            ="Current State: " & loc_currentStatus.Title
        Width: =378
        X: =15
        Y: =453
        ZIndex: =6

    img_datastream As image:
        Image: =Last(AttachmentControl.Attachments).Value
        Visible: =false
        X: =1266
        Y: =668
        ZIndex: =7

    DataTable2 As dataTable.datatable:
        BorderStyle: =BorderStyle.Solid
        Color: =RGBA(26, 26, 26, 1)
        DisplayMode: =DisplayMode.Edit
        Fill: =RGBA(255, 255, 255, 1)
        Height: =290
        Items: =col_parseJSON
        NoDataText: =""
        Width: =771
        X: =414
        Y: =138
        ZIndex: =8

        title_Column2 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="title"
            FieldName: ="title"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =1
            Text: =ThisItem.title
            Width: =100
            X: =0
            Y: =0
            ZIndex: =8

        group_owners_Column1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="group_owners"
            FieldName: ="group_owners"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =2
            Text: =ThisItem.group_owners
            Width: =100
            X: =0
            Y: =0
            ZIndex: =9

        security_classification_Column1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="security_classification"
            FieldName: ="security_classification"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =3
            Text: =ThisItem.security_classification
            Width: =100
            X: =0
            Y: =0
            ZIndex: =10

        url_Column2 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="url"
            FieldName: ="url"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =4
            Text: =ThisItem.url
            Width: =100
            X: =0
            Y: =0
            ZIndex: =11

    Label2 As label:
        Align: =Align.Center
        Fill: =RGBA(186, 202, 226, 1)
        Height: =102
        Text: ="Automail App"
        Width: =1366
        ZIndex: =9

    Icon1 As icon.Add:
        Height: =96
        Icon: =Icon.Add
        Width: =80
        X: =1218
        Y: =5
        ZIndex: =10

    AttachmentControl As attachments:
        BorderColor: =Color.Transparent
        Color: =Color.Transparent
        DisplayMode: =
        Fill: =Color.Transparent
        Height: =96
        HoverBorderColor: =Color.White
        HoverColor: =Color.Transparent
        HoverFill: =Color.Transparent
        IsInDataCard: =true
        Items: =
        OnAddFile: |+
            =Refresh(LogList);
            UpdateContext(
                {
                    loc_currentStatus: Patch(loc_currentStatus,
                        {
                            Status: 0,
                            Title: "you submitted"
                        }
                    )
                }
            );
            Set(gbl_stateGUID,"");
            
            Set(varDemoFromAttachmentControl, JSON(img_datastream.Image, JSONFormat.IncludeBinaryData));
            Set(varBase64Only, Mid(varDemoFromAttachmentControl, Find(",", varDemoFromAttachmentControl) + 1, Len(varDemoFromAttachmentControl) - Find(",", varDemoFromAttachmentControl) - 1));
            //Set(varFileLink, UploadFile.Run(Last(AttachmentControl.Attachments).Name, varBase64Only).sharepointfilelink);
            
            /*If(UploadandSaveToSharepoint.Run(Last(AttachmentControl.Attachments).Name, varBase64Only).success = "true",
                Notify("Flow Run Completed Successfully", NotificationType.Success, 2000),
                Notify("Flow Failed To Run", NotificationType.Error, 2000));*/
            
            Clear(col_parseJSON);
            Clear(col_attachment_flow);
            Collect(col_attachment_flow, 
                {
                        Title: Last(AttachmentControl.Attachments).Name,
                        Datastream: img_datastream.Image
                }
            );
            
            //Set(varExcel, UploadAndValidateExcel.Run(JSON(col_attachment_flow,  JSONFormat.IncludeBinaryData)).response);
            
            
            //create GUID
            Set(gbl_stateGUID,GUID());
            
            //start Power Automate Flow
            Set(col_Excel, flowStatus.Run(gbl_stateGUID,JSON(col_attachment_flow,  JSONFormat.IncludeBinaryData)).response);
            
            ClearCollect(col_parseJSON,
                ForAll( Table(ParseJSON(col_Excel)), 
                    { 
                        title: Text( Value.title), 
                        url: Text( Value.url),
                        group_owners:Text(Value.group_owners),
                        security_classification: Text(Value.security_classification)
                    }
                )
            );
            Refresh(LogList);
            Reset(AttachmentControl);
            
            
        PaddingBottom: =5
        PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
        PaddingRight: =5
        PaddingTop: =5
        Tooltip: =
        Width: =182
        X: =1167
        Y: =5
        ZIndex: =11

    Gallery4 As gallery.galleryVertical:
        DelayItemLoading: =true
        Fill: =RGBA(255, 255, 255, 1)
        Height: =275
        Items: =LogList
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        TemplateSize: =51
        Width: =771
        X: =414
        Y: =465
        ZIndex: =12

        Label5_1 As label:
            Text: =loc_currentStatus.Title
            Width: =250
            X: =15
            Y: =15
            ZIndex: =1

    Label5 As label:
        Text: =loc_currentStatus.Status
        Width: =250
        X: =704
        Y: =481
        ZIndex: =13

